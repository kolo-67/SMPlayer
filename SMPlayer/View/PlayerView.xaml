<Window x:Class="SMPlayer.PlayerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SMPlayer"
        xmlns:smPlayerViewModel="clr-namespace:SMPlayerViewModel;assembly=SMPlayerViewModel"
        xmlns:view="clr-namespace:SMPlayer.View"
        mc:Ignorable="d"
        Loaded="Window_Loaded_1"
        Title="Simple Player" Height="500" Width="1000" 
        Background="Ivory"
        WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Window.Resources>
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <local:TimelineMultiValueConvertor x:Key="timelineMultiValueConvertor"></local:TimelineMultiValueConvertor>
        <local:TimeSpanAsStringConverter x:Key="timeSpanAsStringConverter"></local:TimeSpanAsStringConverter>
        <Style TargetType="Grid">
            <Setter Property="Background" Value="#CCCCDD" />
        </Style>
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <Style TargetType="TabControl">
        <Setter Property="Background" Value="#D5D5F6" />
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="#D5D5F6" />
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="#D5D5F6" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#8888DD" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Margin" Value="1" />
        </Style>
        <Style x:Key="SliderButtonStyle"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Height"
          Value="14" />
            <Setter Property="Width"
          Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse"
                 StrokeThickness="1">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Template when the orientation of the Slider is Horizontal.-->
        <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Top"
             Height="4"
             Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>
                <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Height="4"
            Grid.Row="1"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                            Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0.0" />
                                    <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Row="1"
           x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Row="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Bottom"
             Height="4"
             Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
             Value="TopLeft">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="BottomRight">
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="Both">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <TabControl x:Name="tcList" Grid.Row="0" Grid.Column="0" ItemsSource="{Binding MediaData.TrakLists}" 
                    SelectedItem="{Binding MediaData.CurrentList}" SelectionChanged="TcList_OnSelectionChanged">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding ListName}" />
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Text="{Binding ListName, UpdateSourceTrigger=PropertyChanged}" />
                        <view:CustomDataGrid  Name="dbTracks" Grid.Row="1" ItemsSource="{Binding Traks}" IsReadOnly="false" AutoGenerateColumns="False" Margin="7,13,7,1"
                           SelectedIndex="{Binding Path=SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           SelectedItemsList="{Binding Path=SelectedTracks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           SelectionMode="Extended"  SelectionUnit="FullRow" CanUserAddRows="False" CanUserDeleteRows="False"
                                   
                                             
                                   SelectedCellsChanged="DataGrid_OnSelectedCellsChanged">
                            <!--SelectedItem="{Binding CurrentTrack}"-->
                            <DataGrid.Resources>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="PreviewMouseDoubleClick" Handler="Row_DoubleClick"/>
                                </Style>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#000000"/>
                            </DataGrid.Resources>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Height" Value="25" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </DataGrid.CellStyle>
                            
                            <DataGrid.Columns>
                                <DataGridTemplateColumn  Header="Track" MinWidth="200">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock x:Name="tbFileName" Text="{Binding FileName}" PreviewMouseDown="TbFileName_OnPreviewMouseDown" 
                                                       PreviewKeyDown="TbFileName_OnPreviewKeyDown" KeyDown="TbFileName_OnPreviewKeyDown">
                                                <TextBlock.Resources>
                                                    <Style TargetType="TextBox" >
                                                        
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=IsFailed}" Value="True">
                                                                <Setter  Property="TextBlock.Background" Value="#33555555"/>
                                                                <Setter  Property="TextBlock.Foreground" Value="#CCFFFFFF"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                                <Setter Property="Foreground" Value="White" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        
                                                    </Style>
                                                    <Style TargetType="DataGridRow">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="White" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Resources>
                                                <TextBlock.ToolTip>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Text="DirectoryName" Margin="5,5,10,5"/>
                                                        <TextBlock Grid.Column="1" Text="{Binding DirectoryName}" />
                                                    </Grid>
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                        </DataTemplate>   
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </view:CustomDataGrid>
                        <TextBox Grid.Row="2" Text="{Binding SelectedTrack.FullDirectoryName, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Grid.Row="3" Text="{Binding SelectedTrack.FileName, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="BlueViolet">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button ToolTip="Play" Command="{Binding PlayCommand}" >
                        <Image Width="30" Height="30"  Source="Pictures\player_play.png"/>
                    </Button>
                    <Button Grid.Column="1" ToolTip="Stop" Command="{Binding StopCommand}">
                        <Image Width="30" Height="30"  Source="Pictures\player_stop.png"/>
                    </Button>
                    <Button Grid.Column="2" ToolTip="Pause" Command="{Binding PauseCommand}">
                        <Image Width="30" Height="30" Source="Pictures\player_pause.png"/>
                    </Button>
                    <Button Grid.Column="3" ToolTip="Pause" Command="{Binding PlayToStartCommand}">
                        <Image Width="30" Height="30" Source="Pictures\player_end.png"/>
                    </Button>
                </Grid>
                <Grid Grid.Row="0" Grid.Column="1"  DataContext="{Binding MediaData}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding CurrentPlayTrack.FileName}" Margin="5,2,10,2" VerticalAlignment="Center" FontSize="14" FontWeight="Bold">
                        <TextBlock.ToolTip>
                            <Grid>
                                <TextBlock Text="{Binding CurrentPlayTrack.FileName}" />
                            </Grid>
                        </TextBlock.ToolTip>
                      </TextBlock>
                    <TextBlock Grid.Column="1" Text="{Binding CurrentPlayTrack.Position, Converter={StaticResource timeSpanAsStringConverter}}" Margin="4" VerticalAlignment="Center" FontSize="14" Background="White" FontWeight="Bold"/>
                    <TextBlock Grid.Column="2" Text="/"  VerticalAlignment="Center" FontSize="14" FontWeight="Bold"/>
                    <TextBlock Grid.Column="3" Text="{Binding CurrentPlayTrack.MaxPosition, Converter={StaticResource timeSpanAsStringConverter}}" Margin="4" VerticalAlignment="Center" FontSize="14" Background="White" FontWeight="Bold"/>
                </Grid>
                <Grid Grid.Row="0" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" ToolTip="Add folders" Command="{Binding AddFoldersCommand}">
                        <Image Width="30" Height="30"  Source="Pictures\AddTable_5632_32.bmp"/>
                    </Button>
                    <Button Grid.Column="2" ToolTip="Add files" Command="{Binding AddFilesCommand}">
                        <Image Width="30" Height="30" Source="Pictures\AddDataItem_32.bmp"/>
                    </Button>
                    <Button Grid.Column="3" ToolTip="Delete"  Command="{Binding DeleteFileCommand}">
                        <Image Width="30" Height="30" Source="Pictures\detachprocess_6535.png"/>
                    </Button>
                    <Button Grid.Column="4" ToolTip="Delete Failed"  Command="{Binding DeleteFailedFileCommand}">
                        <Image Width="30" Height="30" Source="Pictures\DeleteColumn_5627.png"/>
                    </Button>
                    <Button Grid.Column="5" ToolTip="Delete All"  Command="{Binding DeleteAllFileCommand}">
                        <Image Width="30" Height="30" Source="Pictures\DeleteColumn_5627.png"/>
                    </Button>
                    <Button Grid.Column="6" ToolTip="Add Play List" Command="{Binding AddPlayListsCommand}">
                        <Image Width="30" Height="30" Source="Pictures\AddNewItem_6273_32.bmp"/>
                    </Button>
                    <Button Grid.Column="7" ToolTip="Delete Play List"  Command="{Binding DeletePlayListCommand}">
                        <Image Width="30" Height="30" Source="Pictures\Clearallrequests_8816.png"/>
                    </Button>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" DataContext="{Binding MediaData}">
                    <Grid.ColumnDefinitions> 
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Folder" Padding="2"/>
                    <TextBlock x:Name="txtPlaingFileDirectory" Grid.Column="1" Text="{Binding CurrentPlayTrack.FullDirectoryName}" Padding="2" MouseDown="UIElement_OnMouseDown"/>
                </Grid>
            </Grid>
            <Grid Grid.Row="1" DataContext="{Binding MediaData}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <GroupBox x:Name="gbVolume" Grid.Row="0" Header="Volume" Margin="3" BorderThickness="2" BorderBrush="Black" >
                    <Slider  Template="{StaticResource HorizontalSlider}"  Width="{Binding ElementName=gbVolume,Path=ActualWidth}"  
                             Orientation="Horizontal" HorizontalAlignment="Left" 
 TickPlacement="BottomRight" Minimum="0" Maximum="1" Value="{Binding VolumeSound}" Background="#CCEEDD"
AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="2" TickFrequency="0.01"
                              IsMoveToPointEnabled ="True">
                    </Slider>
                </GroupBox >
                <GroupBox x:Name="gbRatio" Grid.Row="0" Grid.Column="1" Header="Ratio">
                    <Slider  Template="{StaticResource HorizontalSlider}" x:Name="slRatio"  Width="{Binding ElementName=gbRatio,Path=ActualWidth}"  Orientation="Horizontal" HorizontalAlignment="Left" 
 TickPlacement="BottomRight" Minimum="0" Maximum="3" 
AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="2" TickFrequency="0.05">
                        <Slider.Value>
                            <Binding ElementName="workPlayer" Path="SpeedRatio"/>
                        </Slider.Value>
                    </Slider>
                </GroupBox>
            </Grid>
            <GroupBox x:Name="gbTimeline"  Grid.Row="2" Header="Timeline"  DataContext="{Binding MediaData}">
                <Slider  Template="{StaticResource HorizontalSlider}" x:Name="slTimeline" 
                         Width="{Binding ElementName=gbTimeline,Path=ActualWidth}"  Orientation="Horizontal" 
                         HorizontalAlignment="Left" IsMoveToPointEnabled="True"
 TickPlacement="BottomRight" Minimum="0" Ticks="0, 1.1, 2.5, 2" ValueChanged="SlTimeline_OnValueChanged"
AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="2" TickFrequency="0.01"
                         Value="{Binding CurrentPlayTrack.Position}">
                    <Slider.Maximum>
                        <Binding Path="CurrentPlayTrack.MaxPosition" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                    </Slider.Maximum>
                </Slider>
            </GroupBox>
            <Viewbox  Grid.Row="3" Margin="5"  DataContext="{Binding MediaData}">
                <MediaElement x:Name="workPlayer" LoadedBehavior="Manual"  MouseDown="MediaElementMouseDown"
                           Volume="{Binding VolumeSound}"
                           Source="{Binding CurrentPlayTrack.FullName}"
                           MediaEnded="WorkPlayer_OnMediaEnded" MediaFailed="WorkPlayer_OnMediaFailed"
                           Stretch="Uniform"  StretchDirection="Both">
                </MediaElement>
            </Viewbox>

        </Grid>
    </Grid>
</Window>
